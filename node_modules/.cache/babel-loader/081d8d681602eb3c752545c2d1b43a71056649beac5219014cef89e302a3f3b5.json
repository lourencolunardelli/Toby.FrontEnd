{"ast":null,"code":"import _objectSpread from \"C:/Users/loulu/Desktop/Toby/Toby.FrontEnd/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nexport default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    label: {\n      type: String,\n      description: \"Input label\"\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\"\n    },\n    addonRightIcon: {\n      type: String,\n      description: \"Input icon on the right\"\n    },\n    addonLeftIcon: {\n      type: String,\n      description: \"Input icon on the left\"\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return {\n      focused: false\n    };\n  },\n  computed: {\n    hasIcon: function hasIcon() {\n      var _this$$slots = this.$slots,\n        addonRight = _this$$slots.addonRight,\n        addonLeft = _this$$slots.addonLeft;\n      return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined;\n    },\n    listeners: function listeners() {\n      return _objectSpread(_objectSpread({}, this.$listeners), {}, {\n        input: this.onInput,\n        blur: this.onBlur,\n        focus: this.onFocus\n      });\n    }\n  },\n  methods: {\n    onInput: function onInput(evt) {\n      this.$emit('input', evt.target.value);\n    },\n    onFocus: function onFocus() {\n      this.focused = true;\n    },\n    onBlur: function onBlur() {\n      this.focused = false;\n    }\n  }\n};","map":{"version":3,"names":["inheritAttrs","name","props","label","type","String","description","value","Number","addonRightIcon","addonLeftIcon","model","prop","event","data","focused","computed","hasIcon","_this$$slots","$slots","addonRight","addonLeft","undefined","listeners","_objectSpread","$listeners","input","onInput","blur","onBlur","focus","onFocus","methods","evt","$emit","target"],"sources":["src/components/Inputs/BaseInput.vue"],"sourcesContent":["<template>\n  <div class=\"form-group\"\n       :class=\"{\n          'input-group': hasIcon,\n          'input-group-focus': focused\n       }\">\n    <slot name=\"label\">\n      <label v-if=\"label\" class=\"control-label\">\n        {{label}}\n      </label>\n    </slot>\n    <slot name=\"addonLeft\">\n      <span v-if=\"addonLeftIcon\" class=\"input-group-prepend\">\n        <div class=\"input-group-text\">\n          <i :class=\"addonLeftIcon\"></i>\n        </div>\n      </span>\n    </slot>\n    <slot>\n      <input\n        :value=\"value\"\n        v-bind=\"$attrs\"\n        v-on=\"listeners\"\n        class=\"form-control\"\n        aria-describedby=\"addon-right addon-left\">\n    </slot>\n    <slot name=\"addonRight\">\n      <span v-if=\"addonRightIcon\" class=\"input-group-append\">\n        <div class=\"input-group-text\">\n          <i :class=\"addonRightIcon\"></i>\n        </div>\n      </span>\n    </slot>\n    <slot name=\"helperText\"></slot>\n  </div>\n</template>\n<script>\n  export default {\n    inheritAttrs: false,\n    name: \"base-input\",\n    props: {\n      label: {\n        type: String,\n        description: \"Input label\"\n      },\n      value: {\n        type: [String, Number],\n        description: \"Input value\"\n      },\n      addonRightIcon: {\n        type: String,\n        description: \"Input icon on the right\"\n      },\n      addonLeftIcon: {\n        type: String,\n        description: \"Input icon on the left\"\n      },\n    },\n    model: {\n      prop: 'value',\n      event: 'input'\n    },\n    data() {\n      return {\n        focused: false\n      }\n    },\n    computed: {\n      hasIcon() {\n        const { addonRight, addonLeft } = this.$slots;\n        return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined;\n      },\n      listeners() {\n        return {\n          ...this.$listeners,\n          input: this.onInput,\n          blur: this.onBlur,\n          focus: this.onFocus\n        }\n      }\n    },\n    methods: {\n      onInput(evt) {\n        this.$emit('input', evt.target.value)\n      },\n      onFocus() {\n        this.focused = true;\n      },\n      onBlur() {\n        this.focused = false;\n      }\n    }\n  }\n</script>\n<style>\n\n</style>\n"],"mappings":";;AAqCA;EACAA,YAAA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;IACAC,KAAA;MACAH,IAAA,GAAAC,MAAA,EAAAG,MAAA;MACAF,WAAA;IACA;IACAG,cAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;IACAI,aAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;EACA;EACAK,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA,IAAAC,YAAA,QAAAC,MAAA;QAAAC,UAAA,GAAAF,YAAA,CAAAE,UAAA;QAAAC,SAAA,GAAAH,YAAA,CAAAG,SAAA;MACA,OAAAD,UAAA,KAAAE,SAAA,IAAAD,SAAA,KAAAC,SAAA,SAAAb,cAAA,KAAAa,SAAA,SAAAZ,aAAA,KAAAY,SAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MACA,OAAAC,aAAA,CAAAA,aAAA,KACA,KAAAC,UAAA;QACAC,KAAA,OAAAC,OAAA;QACAC,IAAA,OAAAC,MAAA;QACAC,KAAA,OAAAC;MAAA;IAEA;EACA;EACAC,OAAA;IACAL,OAAA,WAAAA,QAAAM,GAAA;MACA,KAAAC,KAAA,UAAAD,GAAA,CAAAE,MAAA,CAAA5B,KAAA;IACA;IACAwB,OAAA,WAAAA,QAAA;MACA,KAAAhB,OAAA;IACA;IACAc,MAAA,WAAAA,OAAA;MACA,KAAAd,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}